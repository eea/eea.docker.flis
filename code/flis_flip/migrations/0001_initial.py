# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-28 10:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('flis_metadata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForesightApproach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('document_title', models.CharField(max_length=255, verbose_name='title')),
                ('text', models.TextField(blank=True, null=True, verbose_name='text')),
                ('file_id', models.FileField(blank=True, default='', max_length=256, null=True, upload_to='outcomes',
                                             verbose_name='File')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='PhasesOfPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('requested_by',
                 models.CharField(blank=True, choices=[('eea', 'EEA'), ('other', 'Other')], max_length=64,
                                  verbose_name='who requested the study?')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('lead_author', models.TextField(verbose_name='lead author')),
                ('other', models.TextField(blank=True, verbose_name='other organisations/authors or contact persons')),
                ('purpose_and_target', models.CharField(blank=True, choices=[('policy', 'Support to policy'), (
                'non_policy', 'Non-policy (research, civil initiative, NGOs...')], max_length=128,
                                                        verbose_name='purpose and target audience')),
                ('additional_information', models.TextField(blank=True, verbose_name='additional information')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TypeOfOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('blossom', models.BooleanField(default=False)),
                ('doc_type', models.CharField(
                    choices=[('all', 'All'), ('activity', 'Forward looking activity'), ('assessment', 'Assessment')],
                    default='all', max_length=128, null=True, verbose_name='Type')),
                ('sort_id', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Assesment',
            fields=[
                ('study_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_flip.Study')),
                ('blossom', models.IntegerField(choices=[(1, 'BLOSSOM study'), (0, 'other study')], default=0,
                                                verbose_name='Approach to assessment')),
            ],
            options={
                'abstract': False,
            },
            bases=('flis_flip.study',),
        ),
        migrations.CreateModel(
            name='ForwardLookingActivity',
            fields=[
                ('study_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_flip.Study')),
                ('additional_information_phase',
                 models.TextField(blank=True, verbose_name='additional information about the application')),
                ('stakeholder_participation',
                 models.BooleanField(default=False, verbose_name='stakeholder participation')),
                ('additional_information_stakeholder',
                 models.TextField(blank=True, verbose_name='additional information about stakeholder involvement')),
                ('environmental_themes',
                 modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_metadata.EnvironmentalTheme',
                                                             verbose_name='topics')),
                ('foresight_approaches', modelcluster.fields.ParentalManyToManyField(to='flis_flip.ForesightApproach',
                                                                                     verbose_name='foresight approaches used')),
                ('phase_of_policy',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='flis_flip.PhasesOfPolicy', verbose_name='phases of policy cycle')),
            ],
            options={
                'verbose_name_plural': 'Forward looking activities',
            },
            bases=('flis_flip.study',),
        ),
        migrations.AddField(
            model_name='study',
            name='countries',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_metadata.Country',
                                                              verbose_name='countries'),
        ),
        migrations.AddField(
            model_name='study',
            name='geographical_scope',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='flis_metadata.GeographicalScope', verbose_name='geographical scope'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='study',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes',
                                                  to='flis_flip.Study'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='type_of_outcome',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='flis_flip.TypeOfOutcome', verbose_name='type of output'),
        ),
    ]
