# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-28 10:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('flis_metadata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverOfChange',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('short_title', models.CharField(max_length=64)),
                ('summary', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Figure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('short_title', models.CharField(max_length=64)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('live', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=512)),
                ('legacy_file', models.CharField(blank=True, max_length=512, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='flis_metadata.Country')),
                ('geographical_scope',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='flis_metadata.GeographicalScope')),
                ('owner',
                 models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Impact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('short_title', models.CharField(max_length=64)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('live', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=512)),
                ('description', models.TextField()),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='flis_metadata.Country')),
                ('geographical_scope',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='flis_metadata.GeographicalScope')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImpactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Implication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('short_title', models.CharField(max_length=64)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('live', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=512)),
                ('policy_area',
                 models.CharField(blank=True, choices=[('mock_policy', 'Mock policy')], default=0, max_length=64,
                                  null=True)),
                ('description', models.TextField(max_length=2048)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='flis_metadata.Country')),
                ('geographical_scope',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='flis_metadata.GeographicalScope')),
                ('owner',
                 models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('short_title', models.CharField(max_length=64)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('live', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=512)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField()),
                ('assessment', models.TextField(blank=True, null=True)),
                ('assessment_author', models.CharField(blank=True, max_length=64, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='flis_metadata.Country')),
                ('geographical_scope',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='flis_metadata.GeographicalScope')),
                ('owner',
                 models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('short_title', models.CharField(max_length=64)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('live', models.BooleanField(default=False)),
                ('title_original', models.CharField(blank=True, max_length=512, null=True)),
                ('published_year', models.CharField(max_length=4)),
                ('legacy_file', models.CharField(blank=True, max_length=512, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('author', models.CharField(max_length=512)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='flis_metadata.Country')),
                ('geographical_scope',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='flis_metadata.GeographicalScope')),
                ('owner',
                 models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteepCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': 'Steep Categories',
            },
        ),
        migrations.CreateModel(
            name='TimeHorizon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trend',
            fields=[
                ('driverofchange_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_horison_scanning.DriverOfChange')),
                ('trend_type', models.IntegerField(choices=[(1, 'Trend'), (2, 'Megatrend')], default=1)),
            ],
            options={
                'abstract': False,
            },
            bases=('flis_horison_scanning.driverofchange',),
        ),
        migrations.CreateModel(
            name='Uncertainty',
            fields=[
                ('driverofchange_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_horison_scanning.DriverOfChange')),
                ('uncertainty_type',
                 models.IntegerField(choices=[(1, 'Rationale'), (2, 'Data'), (3, 'Methodology (related to the model)')],
                                     default=1)),
            ],
            options={
                'verbose_name_plural': 'Uncertainties',
            },
            bases=('flis_horison_scanning.driverofchange',),
        ),
        migrations.CreateModel(
            name='WeakSignal',
            fields=[
                ('driverofchange_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_horison_scanning.DriverOfChange')),
            ],
            options={
                'abstract': False,
            },
            bases=('flis_horison_scanning.driverofchange',),
        ),
        migrations.CreateModel(
            name='WildCard',
            fields=[
                ('driverofchange_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='flis_horison_scanning.DriverOfChange')),
            ],
            options={
                'abstract': False,
            },
            bases=('flis_horison_scanning.driverofchange',),
        ),
        migrations.AddField(
            model_name='indicator',
            name='sources',
            field=models.ManyToManyField(blank=True, to='flis_horison_scanning.Source'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flis_metadata.EnvironmentalTheme'),
        ),
        migrations.AddField(
            model_name='implication',
            name='sources',
            field=models.ManyToManyField(blank=True, to='flis_horison_scanning.Source'),
        ),
        migrations.AddField(
            model_name='impact',
            name='impact_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='impact_type', to='flis_horison_scanning.ImpactType'),
        ),
        migrations.AddField(
            model_name='impact',
            name='owner',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='impact',
            name='sources',
            field=models.ManyToManyField(blank=True, to='flis_horison_scanning.Source'),
        ),
        migrations.AddField(
            model_name='impact',
            name='steep_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='impact_category', to='flis_horison_scanning.SteepCategory'),
        ),
        migrations.AddField(
            model_name='figure',
            name='sources',
            field=models.ManyToManyField(blank=True, to='flis_horison_scanning.Source'),
        ),
        migrations.AddField(
            model_name='figure',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flis_metadata.EnvironmentalTheme'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='flis_metadata.Country'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='figures',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_horison_scanning.Figure'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='geographical_scope',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='flis_metadata.GeographicalScope'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='impacts',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_horison_scanning.Impact'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='implications',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_horison_scanning.Implication'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='indicators',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_horison_scanning.Indicator'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='sources',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='flis_horison_scanning.Source'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='steep_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='flis_horison_scanning.SteepCategory'),
        ),
        migrations.AddField(
            model_name='driverofchange',
            name='time_horizon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='flis_horison_scanning.TimeHorizon'),
        ),
    ]
