# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-28 10:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('wagtailimages', '0018_remove_rendition_filter'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
    ]

    operations = [
        migrations.CreateModel(
            name='TopicIndexPage',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('header_color', models.CharField(blank=True,
                                                  choices=[('aqua', 'Aqua'), ('black', 'Black'), ('cherry', 'Cherry'),
                                                           ('lime', 'Lime'), ('purple', 'Purple'), ('orange', 'Orange'),
                                                           ('red', 'Red')], max_length=255, null=True)),
                ('header_icon', models.CharField(blank=True, choices=[('book', 'Book'), ('chart', 'Chart'),
                                                                      ('clusters', 'Clusters'), ('counter', 'Counter'),
                                                                      ('cutlery', 'Cutlery'), ('database', 'Database'),
                                                                      ('drop', 'Drop'), ('eye', 'Eye'),
                                                                      ('glasses', 'Glasses'),
                                                                      ('indicator', 'Indicator'),
                                                                      ('lighting', 'Lightning'), ('diamond', 'Note'),
                                                                      ('puzzle', 'Puzzle'),
                                                                      ('road-signs', 'Road Signs'), ('stack', 'Stack'),
                                                                      ('strategy', 'Strategy'), ('sunset', 'Sunset'),
                                                                      ('target', 'Target'), ('upload', 'Upload'),
                                                                      ('users-leader', 'Users')], max_length=255,
                                                 null=True)),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('header_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                   related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TopicStoryPage',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('teaser', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
                ('content', wagtail.wagtailcore.fields.StreamField((('subheading', wagtail.wagtailcore.blocks.CharBlock(
                    classname='full title', icon='title', template='pages/streamfield_blocks/subheading.html')), (
                                                                    'paragraph',
                                                                    wagtail.wagtailcore.blocks.RichTextBlock()), (
                                                                    'image_with_caption',
                                                                    wagtail.wagtailcore.blocks.StructBlock((('image',
                                                                                                             wagtail.wagtailimages.blocks.ImageChooserBlock(
                                                                                                                 required=True)),
                                                                                                            ('caption',
                                                                                                             wagtail.wagtailcore.blocks.CharBlock(
                                                                                                                 required=False)),
                                                                                                            (
                                                                                                            'image_width',
                                                                                                            wagtail.wagtailcore.blocks.ChoiceBlock(
                                                                                                                choices=[
                                                                                                                    (
                                                                                                                    'content_wide',
                                                                                                                    'Content wide'),
                                                                                                                    (
                                                                                                                    'page_wide',
                                                                                                                    'Page wide')]))))),
                                                                    ('footnotes',
                                                                     wagtail.wagtailcore.blocks.StructBlock((('notes',
                                                                                                              wagtail.wagtailcore.blocks.ListBlock(
                                                                                                                  wagtail.wagtailcore.blocks.RichTextBlock(
                                                                                                                      required=True))),))),
                                                                    ('table_with_header',
                                                                     wagtail.wagtailcore.blocks.StructBlock((('number',
                                                                                                              wagtail.wagtailcore.blocks.CharBlock(
                                                                                                                  title='Table number')),
                                                                                                             ('title',
                                                                                                              wagtail.wagtailcore.blocks.CharBlock(
                                                                                                                  title='Table title')),
                                                                                                             ('table',
                                                                                                              wagtail.contrib.table_block.blocks.TableBlock(
                                                                                                                  required=True,
                                                                                                                  table_options={
                                                                                                                      'autoColumnSize': False,
                                                                                                                      'colHeaders': False,
                                                                                                                      'contextMenu': True,
                                                                                                                      'editor': 'text',
                                                                                                                      'height': 150,
                                                                                                                      'minSpareRows': 0,
                                                                                                                      'renderer': 'text',
                                                                                                                      'rowHeaders': False,
                                                                                                                      'startCols': 4,
                                                                                                                      'startRows': 4,
                                                                                                                      'stretchH': 'all'})))))),
                                                                   blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
